name: Desktop build

on:
  # NOTE: This event will only trigger a workflow run if the workflow file is on the default branch.
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_run
  workflow_run:
    workflows: [Build base]
    types: 
      - completed

jobs:
  build-appimage:
    name: Build AppImage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install developer dependencies
        run: |
          make install-dependencies
          pip install pyinstaller==6.1.0

      # c.f. https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#using-data-from-the-triggering-workflow
      - name: Download app-static
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == 'app-static'
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/app-static.zip`, Buffer.from(download.data));

      - name: Unzip artifact
        run: unzip app-static.zip -o -d app/static

      - name: Build AppImage
        run: make desktop-dist

      - uses: actions/upload-artifact@v3
        with:
          name: "RacineDesktop AppImage ${{ needs.build-app-static.outputs.VERSION }}"
          path: "desktop/dist/RacineDesktop-${{ needs.build-app-static.outputs.VERSION }}.AppImage"

  build-windows:
    name: Build Windows executable
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
    
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install developer dependencies
        run: |
          make install-dependencies
          pip install pyinstaller==6.1.0
        shell: bash

      # c.f. https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#using-data-from-the-triggering-workflow
      - name: Download app-static
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == 'app-static'
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/app-static.zip`, Buffer.from(download.data));

      - name: Unzip artifact
        run: unzip app-static.zip -o -d app/static

      - name: Build executable
        run: make desktop-dist

      - uses: actions/upload-artifact@v3
        with:
          name: "RacineDesktop Setup ${{ needs.build-app-static.outputs.VERSION }}"
          path: "desktop/dist/RacineDesktop Setup ${{ needs.build-app-static.outputs.VERSION }}.exe"

  release:
    name: Publish release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-appimage, build-windows]
    steps:
      - name: Download AppImage
        uses: actions/download-artifact@v3
        with:
          name: "RacineDesktop AppImage ${{ needs.build-app-static.outputs.VERSION }}"

      - name: Download Windows executable
        uses: actions/download-artifact@v3
        with:
          name: "RacineDesktop Setup ${{ needs.build-app-static.outputs.VERSION }}"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            RacineDesktop-${{ needs.build-app-static.outputs.VERSION }}.AppImage
            RacineDesktop Setup ${{ needs.build-app-static.outputs.VERSION }}.exe
