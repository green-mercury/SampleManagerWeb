name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Run tests & display coverage
    runs-on: ubuntu-latest
    steps:
      - run: echo "event name is:" ${{ github.event_name }} 
      - run: echo "event type is:" ${{ github.event.action }} 
    
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - name: Install developer dependencies
        run: make install-dependencies

      - name: Lint with flake8
        run: make flake8

      - name: Run tests and produce .coverage file
        run: make test

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Check coding style
        run: make black

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v3
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          # If you use a different name, update COMMENT_ARTIFACT_NAME accordingly
          name: python-coverage-comment-action
          # If you use a different name, update COMMENT_FILENAME accordingly
          path: python-coverage-comment-action.txt
          
  # based on https://stackoverflow.com/a/64373702
  build-docker:
    name: Build docker image & run tests
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: misc/docker-compose.yml

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build docker images
      run: docker-compose build web

    - name: Run tests
      run: |
        docker-compose run -d web
        docker-compose exec -T web python -m pytest
        docker-compose kill web
        
    - name: Export image
      run: docker save --output /tmp/dockerimage.tar holgergraef/msm
    
    # https://docs.docker.com/build/ci/github-actions/examples/#share-built-image-between-jobs
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: dockerimage
        path: /tmp/dockerimage.tar

  push:
    if: github.event_name == 'push'
    needs: build-docker
    name: Push docker image
    runs-on: ubuntu-latest
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: dockerimage
        path: /tmp
        
    - name: Import image
      run: |
        docker load --input /tmp/dockerimage.tar
        docker image ls
    
    - name: Login to DockerHub
      run: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

    - name: Push to DockerHub
      run: docker push holgergraef/msm

    - name: Login to ghcr
      run: echo ${{ github.token }} | docker login ghcr.io -u HolgerGraef --password-stdin

    - name: Tag image for ghcr
      run: docker tag holgergraef/msm:latest ghcr.io/holgergraef/msm:latest

    - name: Push to ghcr
      run: docker push ghcr.io/holgergraef/msm:latest
