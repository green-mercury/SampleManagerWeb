info:
  description: MSM API
  version: 0.1.0-dev
  contact:
    email: holger.graef@gmail.com
  license:
    name: GPL v3
    url: https://github.com/HolgerGraef/MSM/blob/master/LICENSE.md
  title: MSM API
tags:
- name: MSM
  description: Endpoints related to MSM
paths:
  /api/sample/{id}:
    delete:
      operationId: deleteSample
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Sample deleted
  /api/share:
    put:
      operationId: createShare
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateShareContent'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Share created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateShareError'
          description: Failed to create share
  /api/share/{id}:
    delete:
      operationId: deleteShare
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Share deleted
        '205':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Share deleted, sample no longer accessible for current user
  /api/action/{sampleid}:
    put:
      operationId: createAction
      parameters:
      - in: path
        name: sampleid
        schema:
          type: integer
        required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewActionFormContent'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Action created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActionError'
          description: Failed to create action
  /api/action/{id}:
    delete:
      operationId: deleteAction
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Action deleted
  /api/action/swaporder:
    post:
      operationId: swapActionOrder
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SwapActionOrderContent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Action order swapped
  /api/action/markasnews:
    post:
      operationId: markActionAsNews
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarkActionAsNewsContent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Action marked as news
  /api/action/unmarkasnews:
    post:
      operationId: unmarkActionAsNews
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnmarkActionAsNewsContent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Action unmarked as news
openapi: 3.0.2
components:
  schemas:
    Empty:
      type: object
      properties: {}
    CreateShareContent:
      type: object
      properties:
        sampleid:
          type: integer
        userid:
          type: integer
        username:
          type: string
    CreateShareError:
      type: object
      properties: {}
    NewActionFormContent:
      type: object
      properties:
        description:
          type: string
        csrf_token:
          type: string
        timestamp:
          type: string
          format: date
    CreateActionError:
      type: object
      properties:
        resubmit:
          type: boolean
    SwapActionOrderContent:
      type: object
      properties:
        swapid:
          type: integer
        actionid:
          type: integer
    MarkActionAsNewsContent:
      type: object
      properties:
        actionid:
          type: integer
        csrf_token:
          type: string
        title:
          type: string
        expires:
          type: string
          format: date
    UnmarkActionAsNewsContent:
      type: object
      properties:
        actionid:
          type: integer
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
